openapi: "3.0.0"
info:
  title: FindNUS_api
  description: API documentation for FindNUS backend services. Handles the retrieval, processing and management of Lost Items found in NUS.
  version: "0.1-280522"
servers:
  - url: https://findnus.herokuapp.com
    description: Heroku domain that hosts the backend services for FindNUS
  - url: https://uat-findnus.herokuapp.com
    description: Integration environment for User acceptance testing.

paths:
  /debug/ping:
    get:
      description: |
        Returns a Hello World equivalent message. Shows that the backend connection works.
      responses:
        '200':
          description: A hello world message.
          content:
            text/plain:
              schema:
                type: string
                example: | 
                  message: Hi there, you have reached FindNUS!
  /debug/checkAuth:
    get:
      description: |
        Check with backend if the Firebase token is valid.
      parameters:
      - in: header
        name: Authorization
        description: Firebase ID token of user 
        required: true
        schema:
          type: string
          example: |
            Authorization: my-token
      responses:
        '200':
          description: Id token is valid
        '401':
          description: Id token is invalid
  /debug/getDemoItem:
    get:
      description: |
        Get a demo item for Milestone 1. 
      parameters:
      - in: query
        name: name
        description: Name of the demoset item to be retrieved 
        required: true
        schema:
          type: string
        allowReserved: true
      responses:
        '200':
          description: Get request is valid, item is found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
        '404':
          description: Get request is valid, item not found
          content:
            text/plain:
              schema:
                type: string
                example: | 
                  Nothing Found!
        
  /item/new:
    post:
      description: |
        Submit a new item to be stored into the database.
      requestBody:
        description: Callback item payload
        content:
          'application/json':
            schema:
              $ref: "#/components/schemas/NewItem"
      responses:
        '201':
          description: Item registered into database
        '400':
          description: Rejected new item into database
  /item/get/{itemId}:
    get:
      description: |
        Get a particular item's full details
      parameters:
        - name: itemId
          in: path
          required: true
          description: Item Id reference
          schema:
            type : integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: A Lost Item's details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
        '404':
          description: Item not found
  /item/peek:
    get:
      description: |
        Get a list of lost items that can be sorted.
        Peek at the database's latest finds.
        (Sorting and filtering to be implemented in the future)
      responses:
        '200':
          description: Returns an array of lost items that may be filtered
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SearchItem'
  /item/request:
    post:
      description: |
        Add a lost item request to the server. 
      security:
      - firebaseAuth: []
      requestBody:
        description: Request payload
        content:
          'application/json':
            schema:
              $ref: "#/components/schemas/NewItem"
      responses:
        '201':
          description: Item lookout request added to server. 
  /search:
    get:
      description: |
        Elastisearch for an item.
      responses:
        '501':
          description: Function not added yet.
                    
components:
  schemas:
    Item:
      type: object
      description: A Lost Item's full details
      required:
      - id
      - name
      - date
      - location
      - category
      properties:
        id: 
          type: string
          format: string
          description: The MongoDB ObjectID associated to this Item
          example: 98721yrr0u14oure
        name:
          type: string
          description: Name of lost item
          example: Water Bottle
        date:
          type: string
          description: Date-time where item is lost/found
          format: date-time
        location:
          type: string
          description: Where the item was found
          example: E4A DSA Lab
        category:
          type: string
          description: Type of item
          example: Etc
        contact_method:
          type: string
          description: Founder/Lostee Contact Method
          example: Telegram
        contact_details:
          type: string
          description: Contact details of Founder/Lostee
          example: FindNUS
        item_details:
          type: string
          example: Blue, with a sticker and broken handle
        image_url:
          type: string
          format: string
          description: Item's accompanying image link
          example: https://imgur.com/gallery/RaHyECD
    NewItem:
      type: object
      description: A New Lost Item with accompanying Image
      required:
        - name
        - date
        - location
        - category
      properties:
        name:
          type: string
          description: Name of new lost/found item
          example: Water Bottle
        date:
          type: string
          description: Date-time where item is lost/found
          format: date-time
        location:
          type: string
          description: Where the item was found
          example: E4A DSA Lab
        category:
          type: string
          description: Type of item
          example: Etc
        contact_method:
          type: string
          description: Founder/Lostee Contact Method
          example: Telegram
        contact_details:
          type: string
          description: Contact details of Founder/Lostee
          example: FindNUS
        item_details:
          type: string
          example: Blue, with a sticker and broken handle
        image_base64:
          type: string
          description: Accompanying image of new Lost/Found item
          format: byte
    SearchItem:
      type: object
      description: Truncated details for a Lost Item
      required:
      - id
      - name
      - date
      - location
      - category
      properties:
        id: 
          type: integer
          format: string
        name:
          type: string
        date:
          type: string
          format: date-time
        location:
          type: string
        category:
          type: string
  # Define security scheme (Firebase Token)
  securitySchemes:
    firebaseAuth:
      type: http
      scheme: bearer
